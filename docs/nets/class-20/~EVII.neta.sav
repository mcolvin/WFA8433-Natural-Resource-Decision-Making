// ~->[DNET-1]->~

// File created by ColvinM at MSStateU using Netica 6.02 on Apr 11, 2017 at 14:52:09 UTC.

bnet EVII {
autoupdate = TRUE;
whenchanged = 1491922329;

visual V1 {
	defdispform = BELIEFBARS;
	nodelabeling = TITLE;
	NodeMaxNumEntries = 50;
	nodefont = font {shape= "Arial"; size= 10;};
	linkfont = font {shape= "Arial"; size= 9;};
	ShowLinkStrengths = 1;
	windowposn = (22, 29, 668, 351);
	scrollposn = (142, 0);
	resolution = 72;
	magnification = 0.818411;
	drawingbounds = (4355, 2652);
	showpagebreaks = FALSE;
	usegrid = TRUE;
	gridspace = (6, 6);
	NodeSet Node {BuiltIn = 1; Color = 0x00c0c0c0;};
	NodeSet Nature {BuiltIn = 1; Color = 0x00f8eed2;};
	NodeSet Deterministic {BuiltIn = 1; Color = 0x00d3caa6;};
	NodeSet Finding {BuiltIn = 1; Color = 0x00c8c8c8;};
	NodeSet Constant {BuiltIn = 1; Color = 0x00ffffff;};
	NodeSet ConstantValue {BuiltIn = 1; Color = 0x00ffffb4;};
	NodeSet Utility {BuiltIn = 1; Color = 0x00ffbdbd;};
	NodeSet Decision {BuiltIn = 1; Color = 0x00dee8ff;};
	NodeSet Documentation {BuiltIn = 1; Color = 0x00f0fafa;};
	NodeSet Title {BuiltIn = 1; Color = 0x00ffffff;};
	PrinterSetting A {
		margins = (1270, 1270, 1270, 1270);
		magnify = 1;
		};
	};

node size1 {
	discrete = TRUE;
	states = (detected, not_detected);
	kind = NATURE;
	chance = CHANCE;
	parents = ();
	probs = 
		// detected     not detected 
		  (0.4,         0.6);
	title = "Sample results";
	whenchanged = 1491922082;
	visual V1 {
		center = (942, 222);
		height = 6;
		};
	};

node timber {
	discrete = TRUE;
	states = (None, Low_intensity, High_intensity);
	kind = DECISION;
	chance = DETERMIN;
	parents = (size1);
	functable = 
		                    // size1        
		  (None,            // detected     
		   High_intensity); // not detected ;
	title = "Management\naction";
	whenchanged = 1326485673;
	visual V1 {
		center = (702, 114);
		height = 4;
		link 1 {
			path = ((879, 194), (779, 150));
			};
		};
	};

node size {
	discrete = TRUE;
	states = (present, absent);
	kind = NATURE;
	chance = CHANCE;
	parents = (size1);
	probs = 
		// present      absent        // size1        
		  (1,           0,            // detected     
		   0.1666667,   0.8333333);   // not detected ;
	title = "Current popn status";
	whenchanged = 1326485676;
	visual V1 {
		center = (942, 318);
		height = 5;
		};
	};

node yield {
	discrete = TRUE;
	states = (none, low, High);
	kind = NATURE;
	chance = CHANCE;
	parents = (timber);
	probs = 
		// none         low          High          // timber         
		  (0.9,         0.1,         0,            // None           
		   0.2,         0.6,         0.2,          // Low intensity  
		   0,           0.2,         0.8);         // High intensity ;
	title = "Environ disturbance";
	whenchanged = 1326480112;
	visual V1 {
		center = (510, 258);
		height = 3;
		link 1 {
			path = ((656, 150), (557, 223));
			};
		};
	};

node future {
	discrete = TRUE;
	states = (present, absent);
	kind = NATURE;
	chance = CHANCE;
	parents = (size, yield);
	probs = 
		// present      absent        // size    yield 
		  (0.95,        0.05,         // present none  
		   0.75,        0.25,         // present low   
		   0.25,        0.75,         // present High  
		   0.25,        0.75,         // absent  none  
		   0.05,        0.95,         // absent  low   
		   0.01,        0.99);        // absent  High  ;
	numcases = 1;
	title = "Future popn status";
	whenchanged = 1326480060;
	visual V1 {
		center = (702, 426);
		height = 2;
		};
	};

node Net {
	discrete = FALSE;
	measure = RATIO;
	kind = UTILITY;
	chance = DETERMIN;
	parents = (timber, future);
	functable = 
		                 // timber         future  
		  (20,           // None           present 
		   -5,           // None           absent  
		   25,           // Low intensity  present 
		   0,            // Low intensity  absent  
		   30,           // High intensity present 
		   5);           // High intensity absent  ;
	title = "Net Value";
	whenchanged = 961699957;
	visual V1 {
		center = (702, 264);
		height = 1;
		};
	};
ElimOrder = (size, yield, future, timber, size1);
};
